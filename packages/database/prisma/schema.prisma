generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  shadowDatabaseUrl    = env("SHADOW_DATABASE_URL")
  referentialIntegrity = "prisma"
}

enum RoleName {
  user
  admin
}

enum OauthProvider {
  github
  google
  stackoverflow
}

model Role {
  id          String   @id @db.VarChar(50)
  name        RoleName @unique
  level       Int      @db.Int
  description String?  @db.VarChar(200)
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  User        User[]

  @@map("roles")
}

model User {
  id            String    @id @db.VarChar(50)
  email         String    @unique @db.VarChar(100)
  username      String?   @db.VarChar(50)
  name          String    @db.VarChar(50) @map("name")
  timezone      String?   @db.VarChar(50)
  isEnabled     Boolean   @default(false) @map("is_enabled") @db.TinyInt
  pictureUrl    String?   @db.VarChar(255) @map("picture_url")
  roleId        String    @map("role_id") @db.VarChar(50)
  oauthProvider OauthProvider
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")
  role          Role      @relation(fields: [roleId], references: [id], onDelete: Restrict)

  @@index([username])
  @@index([roleId])
  @@map("users")
}
